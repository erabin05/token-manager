// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-arm64-openssl-3.0.x", "darwin-arm64"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  VIEWER
  MAINTAINER
  ADMIN
}

model User {
  id           Int      @id @default(autoincrement())
  email        String   @unique
  name         String
  password     String   // Nouveau champ pour le mot de passe hashé
  refreshToken String?  // Nouveau champ pour le refresh token
  role         UserRole @default(VIEWER)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Token {
  id          Int          @id @default(autoincrement())
  name        String
  tokenValues TokenValue[]
  groupId     Int?
  group       TokenGroup?  @relation(fields: [groupId], references: [id], onDelete: Cascade)
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model TokenGroup {
  id        Int          @id @default(autoincrement())
  name      String
  tokens    Token[]
  parentId  Int?
  parent    TokenGroup? @relation("GroupToGroup", fields: [parentId], references: [id], onDelete: Cascade)
  children  TokenGroup[] @relation("GroupToGroup")
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
}

model Theme {
  id          Int          @id @default(autoincrement())
  name        String       @unique
  tokenValues TokenValue[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  parentId    Int?         // clé étrangère optionnelle
  parent      Theme?       @relation("ThemeToTheme", fields: [parentId], references: [id])
  children    Theme[]      @relation("ThemeToTheme")
}

model TokenValue {
  id        Int      @id @default(autoincrement())
  value     String
  tokenId   Int
  themeId   Int
  token     Token    @relation(fields: [tokenId], references: [id], onDelete: Cascade)
  theme     Theme    @relation(fields: [themeId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([tokenId, themeId])
}
