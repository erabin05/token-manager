version: '3.8'
services:
  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_DB: ${POSTGRES_DB:-token_manager_db}
    ports:
      - '${DB_PORT:-5432}:5432'
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - token-manager-network

  server:
    build:
      context: ./server
      dockerfile: Dockerfile.prod
      target: production
    depends_on:
      - db
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-user}:${POSTGRES_PASSWORD:-password}@db:5432/${POSTGRES_DB:-token_manager_db}
      ADMIN_EMAIL: ${ADMIN_EMAIL:-admin@token-manager.com}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD:-admin123}
      ADMIN_NAME: ${ADMIN_NAME:-System Administrator}
      JWT_SECRET: ${JWT_SECRET:-your-secret-key}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET:-your-refresh-secret-key}
    ports:
      - '${APP_PORT:-3000}:3000'
    restart: always
    networks:
      - token-manager-network
    command: sh -c "npx prisma generate && npx prisma db push && npm run db:seed && npm run build && node dist/server.js"

  dashboard:
    build:
      context: ./dashboard
      dockerfile: Dockerfile.prod
      target: production
    depends_on:
      - server
    environment:
      VITE_API_URL: http://localhost:${APP_PORT:-3000}
    ports:
      - '${DASHBOARD_PORT:-80}:80'
    restart: always
    networks:
      - token-manager-network

volumes:
  db_data:

networks:
  token-manager-network:
    driver: bridge 