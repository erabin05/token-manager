version: '3.8'
services:
  traefik:
    image: traefik:v2.10
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080" # Dashboard Traefik
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: always

  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: token_manager_db
    ports:
      - '${DB_PORT:-5432}:5432'
    volumes:
      - db_data:/var/lib/postgresql/data

  app:
    build: .
    depends_on:
      - db
    environment:
      DATABASE_URL: postgresql://user:password@db:5432/token_manager_db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.app.rule=Host(`token-manager.server.localhost`)"
      - "traefik.http.services.app.loadbalancer.server.port=3000"
    volumes:
      - .:/app
    command: sh -c "npx prisma generate && npx prisma migrate deploy && npm run dev"
    restart: always
  
  prisma-studio:
    build: .
    depends_on:
      - db
    environment:
      DATABASE_URL: postgresql://user:password@db:5432/token_manager_db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prisma.rule=Host(`token-manager.prisma.localhost`)"
      - "traefik.http.services.prisma.loadbalancer.server.port=5555"
    volumes:
      - .:/app
    command: sh -c "npx prisma generate && npx prisma studio --hostname 0.0.0.0 --port 5555"
    restart: always

  playwright-e2e:
    build: .
    depends_on:
      - app
    environment:
      DATABASE_URL: postgresql://user:password@db:5432/token_manager_db
      TEST_ENV: dev
      WATCH_MODE: "true"
    ports:
      - "9323:9323"
    volumes:
      - .:/app
      - /app/node_modules
    command: sh -c "npx prisma generate && npx playwright install && npx playwright test --ui --ui-port 9323"
    restart: always

volumes:
  db_data:
